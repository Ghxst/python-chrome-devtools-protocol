'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: dom
Experimental: False
'''

from dataclasses import dataclass, field
import typing

from .types import *


@dataclass
class AttributeModified:
    '''
    Fired when `Element`'s attribute is modified.
    '''
    #: Fired when `Element`'s attribute is modified.
    node_id: NodeId

    #: Fired when `Element`'s attribute is modified.
    name: str

    #: Fired when `Element`'s attribute is modified.
    value: str


@dataclass
class AttributeRemoved:
    '''
    Fired when `Element`'s attribute is removed.
    '''
    #: Fired when `Element`'s attribute is removed.
    node_id: NodeId

    #: Fired when `Element`'s attribute is removed.
    name: str


@dataclass
class CharacterDataModified:
    '''
    Mirrors `DOMCharacterDataModified` event.
    '''
    #: Mirrors `DOMCharacterDataModified` event.
    node_id: NodeId

    #: Mirrors `DOMCharacterDataModified` event.
    character_data: str


@dataclass
class ChildNodeCountUpdated:
    '''
    Fired when `Container`'s child node count has changed.
    '''
    #: Fired when `Container`'s child node count has changed.
    node_id: NodeId

    #: Fired when `Container`'s child node count has changed.
    child_node_count: int


@dataclass
class ChildNodeInserted:
    '''
    Mirrors `DOMNodeInserted` event.
    '''
    #: Mirrors `DOMNodeInserted` event.
    parent_node_id: NodeId

    #: Mirrors `DOMNodeInserted` event.
    previous_node_id: NodeId

    #: Mirrors `DOMNodeInserted` event.
    node: Node


@dataclass
class ChildNodeRemoved:
    '''
    Mirrors `DOMNodeRemoved` event.
    '''
    #: Mirrors `DOMNodeRemoved` event.
    parent_node_id: NodeId

    #: Mirrors `DOMNodeRemoved` event.
    node_id: NodeId


@dataclass
class DistributedNodesUpdated:
    '''
    Called when distrubution is changed.
    '''
    #: Called when distrubution is changed.
    insertion_point_id: NodeId

    #: Called when distrubution is changed.
    distributed_nodes: typing.List['BackendNode']


@dataclass
class DocumentUpdated:
    '''
    Fired when `Document` has been totally updated. Node ids are no longer valid.
    '''
    pass


@dataclass
class InlineStyleInvalidated:
    '''
    Fired when `Element`'s inline style is modified via a CSS property modification.
    '''
    #: Fired when `Element`'s inline style is modified via a CSS property modification.
    node_ids: typing.List['NodeId']


@dataclass
class PseudoElementAdded:
    '''
    Called when a pseudo element is added to an element.
    '''
    #: Called when a pseudo element is added to an element.
    parent_id: NodeId

    #: Called when a pseudo element is added to an element.
    pseudo_element: Node


@dataclass
class PseudoElementRemoved:
    '''
    Called when a pseudo element is removed from an element.
    '''
    #: Called when a pseudo element is removed from an element.
    parent_id: NodeId

    #: Called when a pseudo element is removed from an element.
    pseudo_element_id: NodeId


@dataclass
class SetChildNodes:
    '''
    Fired when backend wants to provide client with the missing DOM structure. This happens upon
    most of the calls requesting node ids.
    '''
    #: Fired when backend wants to provide client with the missing DOM structure. This happens upon
    #: most of the calls requesting node ids.
    parent_id: NodeId

    #: Fired when backend wants to provide client with the missing DOM structure. This happens upon
    #: most of the calls requesting node ids.
    nodes: typing.List['Node']


@dataclass
class ShadowRootPopped:
    '''
    Called when shadow root is popped from the element.
    '''
    #: Called when shadow root is popped from the element.
    host_id: NodeId

    #: Called when shadow root is popped from the element.
    root_id: NodeId


@dataclass
class ShadowRootPushed:
    '''
    Called when shadow root is pushed into the element.
    '''
    #: Called when shadow root is pushed into the element.
    host_id: NodeId

    #: Called when shadow root is pushed into the element.
    root: Node

