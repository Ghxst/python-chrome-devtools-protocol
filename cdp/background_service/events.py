'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: background_service
Experimental: True
'''

from cdp.util import T_JSON_DICT
from dataclasses import dataclass
import enum
import typing

from .types import *


@dataclass
class RecordingStateChanged:
    '''
    Called when the recording state for the service has been updated.
    '''
    #: Called when the recording state for the service has been updated.
    is_recording: bool

    #: Called when the recording state for the service has been updated.
    service: ServiceName

    # These fields are used for internal purposes and are not part of CDP
    _domain = 'BackgroundService'
    _method = 'recordingStateChanged'

    @classmethod
    def from_json(cls, json: dict) -> 'RecordingStateChanged':
        return cls(
            is_recording=bool(json['isRecording']),
            service=ServiceName.from_json(json['service']),
        )


@dataclass
class BackgroundServiceEventReceived:
    '''
    Called with all existing backgroundServiceEvents when enabled, and all new
    events afterwards if enabled and recording.
    '''
    #: Called with all existing backgroundServiceEvents when enabled, and all new
    #: events afterwards if enabled and recording.
    background_service_event: BackgroundServiceEvent

    # These fields are used for internal purposes and are not part of CDP
    _domain = 'BackgroundService'
    _method = 'backgroundServiceEventReceived'

    @classmethod
    def from_json(cls, json: dict) -> 'BackgroundServiceEventReceived':
        return cls(
            background_service_event=BackgroundServiceEvent.from_json(json['backgroundServiceEvent']),
        )

