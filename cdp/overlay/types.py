'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: overlay
Experimental: True
'''

from dataclasses import dataclass, field
import typing

from ..dom import types as dom



class InspectMode:
    SEARCH_FOR_NODE = "searchForNode"
    SEARCH_FOR_UA_SHADOW_DOM = "searchForUAShadowDOM"
    CAPTURE_AREA_SCREENSHOT = "captureAreaScreenshot"
    SHOW_DISTANCES = "showDistances"
    NONE = "none"


@dataclass
class HighlightConfig:
    '''
    Configuration data for the highlighting of page elements.
    '''
    #: Whether the node info tooltip should be shown (default: false).
    show_info: bool

    #: Whether the node styles in the tooltip (default: false).
    show_styles: bool

    #: Whether the rulers should be shown (default: false).
    show_rulers: bool

    #: Whether the extension lines from node to the rulers should be shown (default: false).
    show_extension_lines: bool

    #: The content box highlight fill color (default: transparent).
    content_color: dom.RGBA

    #: The padding highlight fill color (default: transparent).
    padding_color: dom.RGBA

    #: The border highlight fill color (default: transparent).
    border_color: dom.RGBA

    #: The margin highlight fill color (default: transparent).
    margin_color: dom.RGBA

    #: The event target element highlight fill color (default: transparent).
    event_target_color: dom.RGBA

    #: The shape outside fill color (default: transparent).
    shape_color: dom.RGBA

    #: The shape margin fill color (default: transparent).
    shape_margin_color: dom.RGBA

    #: The grid layout color (default: transparent).
    css_grid_color: dom.RGBA

    @classmethod
    def from_response(cls, response):
        return cls(
            show_info=bool(response.get('showInfo')),
            show_styles=bool(response.get('showStyles')),
            show_rulers=bool(response.get('showRulers')),
            show_extension_lines=bool(response.get('showExtensionLines')),
            content_color=dom.RGBA.from_response(response.get('contentColor')),
            padding_color=dom.RGBA.from_response(response.get('paddingColor')),
            border_color=dom.RGBA.from_response(response.get('borderColor')),
            margin_color=dom.RGBA.from_response(response.get('marginColor')),
            event_target_color=dom.RGBA.from_response(response.get('eventTargetColor')),
            shape_color=dom.RGBA.from_response(response.get('shapeColor')),
            shape_margin_color=dom.RGBA.from_response(response.get('shapeMarginColor')),
            css_grid_color=dom.RGBA.from_response(response.get('cssGridColor')),
        )

