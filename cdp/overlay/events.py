'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: overlay
Experimental: True
'''

from cdp.util import T_JSON_DICT
from dataclasses import dataclass
import enum
import typing

from .types import *
from ..dom import types as dom
from ..page import types as page



@dataclass
class InspectNodeRequested:
    '''
    Fired when the node should be inspected. This happens after call to `setInspectMode` or when
    user manually inspects an element.
    '''
    #: Fired when the node should be inspected. This happens after call to `setInspectMode` or when
    #: user manually inspects an element.
    backend_node_id: dom.BackendNodeId

    # These fields are used for internal purposes and are not part of CDP
    _domain = 'Overlay'
    _method = 'inspectNodeRequested'

    @classmethod
    def from_json(cls, json: dict) -> 'InspectNodeRequested':
        return cls(
            backend_node_id=dom.BackendNodeId.from_json(json['backendNodeId']),
        )


@dataclass
class NodeHighlightRequested:
    '''
    Fired when the node should be highlighted. This happens after call to `setInspectMode`.
    '''
    #: Fired when the node should be highlighted. This happens after call to `setInspectMode`.
    node_id: dom.NodeId

    # These fields are used for internal purposes and are not part of CDP
    _domain = 'Overlay'
    _method = 'nodeHighlightRequested'

    @classmethod
    def from_json(cls, json: dict) -> 'NodeHighlightRequested':
        return cls(
            node_id=dom.NodeId.from_json(json['nodeId']),
        )


@dataclass
class ScreenshotRequested:
    '''
    Fired when user asks to capture screenshot of some area on the page.
    '''
    #: Fired when user asks to capture screenshot of some area on the page.
    viewport: page.Viewport

    # These fields are used for internal purposes and are not part of CDP
    _domain = 'Overlay'
    _method = 'screenshotRequested'

    @classmethod
    def from_json(cls, json: dict) -> 'ScreenshotRequested':
        return cls(
            viewport=page.Viewport.from_json(json['viewport']),
        )


@dataclass
class InspectModeCanceled:
    '''
    Fired when user cancels the inspect mode.
    '''
    # These fields are used for internal purposes and are not part of CDP
    _domain = 'Overlay'
    _method = 'inspectModeCanceled'

    @classmethod
    def from_json(cls, json: dict) -> 'InspectModeCanceled':
        return cls(
        )

