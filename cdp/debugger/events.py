'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: debugger
Experimental: False
'''

from dataclasses import dataclass, field
import typing

from .types import *
from ..runtime import types as runtime



@dataclass
class BreakpointResolved:
    '''
    Fired when breakpoint is resolved to an actual script and location.
    '''
    #: Fired when breakpoint is resolved to an actual script and location.
    breakpoint_id: BreakpointId

    #: Fired when breakpoint is resolved to an actual script and location.
    location: Location


@dataclass
class Paused:
    '''
    Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    '''
    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    call_frames: typing.List['CallFrame']

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    reason: str

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    data: dict

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    hit_breakpoints: typing.List

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    async_stack_trace: runtime.StackTrace

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    async_stack_trace_id: runtime.StackTraceId

    #: Fired when the virtual machine stopped on breakpoint or exception or any other stop criteria.
    async_call_stack_trace_id: runtime.StackTraceId


@dataclass
class Resumed:
    '''
    Fired when the virtual machine resumed execution.
    '''
    pass


@dataclass
class ScriptFailedToParse:
    '''
    Fired when virtual machine fails to parse the script.
    '''
    #: Fired when virtual machine fails to parse the script.
    script_id: runtime.ScriptId

    #: Fired when virtual machine fails to parse the script.
    url: str

    #: Fired when virtual machine fails to parse the script.
    start_line: int

    #: Fired when virtual machine fails to parse the script.
    start_column: int

    #: Fired when virtual machine fails to parse the script.
    end_line: int

    #: Fired when virtual machine fails to parse the script.
    end_column: int

    #: Fired when virtual machine fails to parse the script.
    execution_context_id: runtime.ExecutionContextId

    #: Fired when virtual machine fails to parse the script.
    hash: str

    #: Fired when virtual machine fails to parse the script.
    execution_context_aux_data: dict

    #: Fired when virtual machine fails to parse the script.
    source_map_url: str

    #: Fired when virtual machine fails to parse the script.
    has_source_url: bool

    #: Fired when virtual machine fails to parse the script.
    is_module: bool

    #: Fired when virtual machine fails to parse the script.
    length: int

    #: Fired when virtual machine fails to parse the script.
    stack_trace: runtime.StackTrace


@dataclass
class ScriptParsed:
    '''
    Fired when virtual machine parses script. This event is also fired for all known and uncollected
    scripts upon enabling debugger.
    '''
    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    script_id: runtime.ScriptId

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    url: str

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    start_line: int

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    start_column: int

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    end_line: int

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    end_column: int

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    execution_context_id: runtime.ExecutionContextId

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    hash: str

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    execution_context_aux_data: dict

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    is_live_edit: bool

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    source_map_url: str

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    has_source_url: bool

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    is_module: bool

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    length: int

    #: Fired when virtual machine parses script. This event is also fired for all known and uncollected
    #: scripts upon enabling debugger.
    stack_trace: runtime.StackTrace

