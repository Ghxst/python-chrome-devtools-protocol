'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: log
Experimental: False
'''

from dataclasses import dataclass, field
import typing

from .types import *


class Log:
    @staticmethod
    def clear() -> None:
        '''
        Clears the log.
        '''

        cmd_dict = {
            'method': 'Log.clear',
        }
        response = yield cmd_dict

    @staticmethod
    def disable() -> None:
        '''
        Disables log domain, prevents further log entries from being reported to the client.
        '''

        cmd_dict = {
            'method': 'Log.disable',
        }
        response = yield cmd_dict

    @staticmethod
    def enable() -> None:
        '''
        Enables log domain, sends the entries collected so far to the client by means of the
        `entryAdded` notification.
        '''

        cmd_dict = {
            'method': 'Log.enable',
        }
        response = yield cmd_dict

    @staticmethod
    def start_violations_report(config: typing.List['ViolationSetting']) -> None:
        '''
        start violation reporting.
        
        :param config: Configuration for violations.
        '''

        cmd_dict = {
            'method': 'Log.startViolationsReport',
            'params': {
                'config': config,
            }
        }
        response = yield cmd_dict

    @staticmethod
    def stop_violations_report() -> None:
        '''
        Stop violation reporting.
        '''

        cmd_dict = {
            'method': 'Log.stopViolationsReport',
        }
        response = yield cmd_dict

