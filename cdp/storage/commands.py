'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: storage
Experimental: True
'''

from dataclasses import dataclass, field
import typing

from .types import *


def clear_data_for_origin(origin: str, storage_types: str) -> typing.Generator[dict,dict,None]:
    '''
    Clears storage for origin.
    
    :param origin: Security origin.
    :param storage_types: Comma separated list of StorageType to clear.
    '''

    cmd_dict = {
        'method': 'Storage.clearDataForOrigin',
        'params': {
            'origin': origin,
            'storageTypes': storage_types,
        }
    }
    response = yield cmd_dict


def get_usage_and_quota(origin: str) -> typing.Generator[dict,dict,dict]:
    '''
    Returns usage and quota in bytes.
    
    :param origin: Security origin.
    :returns: a dict with the following keys:
        * usage: Storage usage (bytes).
        * quota: Storage quota (bytes).
        * usageBreakdown: Storage usage per type (bytes).
    '''

    cmd_dict = {
        'method': 'Storage.getUsageAndQuota',
        'params': {
            'origin': origin,
        }
    }
    response = yield cmd_dict
    return {
        'usage': float(response['usage']),
        'quota': float(response['quota']),
        'usageBreakdown': [UsageForType.from_response(i) for i in response['usageBreakdown']],
    }


def track_cache_storage_for_origin(origin: str) -> typing.Generator[dict,dict,None]:
    '''
    Registers origin to be notified when an update occurs to its cache storage list.
    
    :param origin: Security origin.
    '''

    cmd_dict = {
        'method': 'Storage.trackCacheStorageForOrigin',
        'params': {
            'origin': origin,
        }
    }
    response = yield cmd_dict


def track_indexed_db_for_origin(origin: str) -> typing.Generator[dict,dict,None]:
    '''
    Registers origin to be notified when an update occurs to its IndexedDB.
    
    :param origin: Security origin.
    '''

    cmd_dict = {
        'method': 'Storage.trackIndexedDBForOrigin',
        'params': {
            'origin': origin,
        }
    }
    response = yield cmd_dict


def untrack_cache_storage_for_origin(origin: str) -> typing.Generator[dict,dict,None]:
    '''
    Unregisters origin from receiving notifications for cache storage.
    
    :param origin: Security origin.
    '''

    cmd_dict = {
        'method': 'Storage.untrackCacheStorageForOrigin',
        'params': {
            'origin': origin,
        }
    }
    response = yield cmd_dict


def untrack_indexed_db_for_origin(origin: str) -> typing.Generator[dict,dict,None]:
    '''
    Unregisters origin from receiving notifications for IndexedDB.
    
    :param origin: Security origin.
    '''

    cmd_dict = {
        'method': 'Storage.untrackIndexedDBForOrigin',
        'params': {
            'origin': origin,
        }
    }
    response = yield cmd_dict


