'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: database
Experimental: True
'''

from dataclasses import dataclass, field
import typing

from .types import *


class Database:
    @staticmethod
    def disable() -> None:
        '''
        Disables database tracking, prevents database events from being sent to the client.
        '''

        cmd_dict = {
            'method': 'Database.disable',
        }
        response = yield cmd_dict

    @staticmethod
    def enable() -> None:
        '''
        Enables database tracking, database events will now be delivered to the client.
        '''

        cmd_dict = {
            'method': 'Database.enable',
        }
        response = yield cmd_dict

    @staticmethod
    def execute_sql(database_id: DatabaseId, query: str) -> dict:
        '''
        
        
        :param database_id: 
        :param query: 
        :returns: a dict with the following keys:
            * columnNames: 
            * values: 
            * sqlError: 
        '''

        cmd_dict = {
            'method': 'Database.executeSQL',
            'params': {
                'databaseId': database_id,
                'query': query,
            }
        }
        response = yield cmd_dict
        return {
                'columnNames': [str(i) for i in response['columnNames']],
                'values': [typing.Any(i) for i in response['values']],
                'sqlError': Error.from_response(response['sqlError']),
            }

    @staticmethod
    def get_database_table_names(database_id: DatabaseId) -> typing.List:
        '''
        
        
        :param database_id: 
        :returns: 
        '''

        cmd_dict = {
            'method': 'Database.getDatabaseTableNames',
            'params': {
                'databaseId': database_id,
            }
        }
        response = yield cmd_dict
        return [str(i) for i in response['tableNames']]

