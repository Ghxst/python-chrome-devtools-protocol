'''
DO NOT EDIT THIS FILE

This file is generated from the CDP definitions. If you need to make changes,
edit the generator and regenerate all of the modules.

Domain: database
Experimental: True
'''

from cdp.util import T_JSON_DICT
from dataclasses import dataclass
import enum
import typing


class DatabaseId(str):
    '''
    Unique identifier of Database object.
    '''
    def to_json(self) -> str:
        return self

    @classmethod
    def from_json(cls, json: str) -> 'DatabaseId':
        return cls(json)

    def __repr__(self):
        return 'DatabaseId({})'.format(super().__repr__())


@dataclass
class Database:
    '''
    Database object.
    '''
    #: Database ID.
    id: DatabaseId

    #: Database domain.
    domain: str

    #: Database name.
    name: str

    #: Database version.
    version: str

    def to_json(self) -> T_JSON_DICT:
        json: T_JSON_DICT = {
            'id': self.id.to_json(),
            'domain': self.domain,
            'name': self.name,
            'version': self.version,
        }
        return json

    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> 'Database':
        return cls(
            id=DatabaseId.from_json(json['id']),
            domain=json['domain'],
            name=json['name'],
            version=json['version'],
        )

@dataclass
class Error:
    '''
    Database error.
    '''
    #: Error message.
    message: str

    #: Error code.
    code: int

    def to_json(self) -> T_JSON_DICT:
        json: T_JSON_DICT = {
            'message': self.message,
            'code': self.code,
        }
        return json

    @classmethod
    def from_json(cls, json: T_JSON_DICT) -> 'Error':
        return cls(
            message=json['message'],
            code=json['code'],
        )

